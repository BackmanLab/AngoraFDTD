Setting& root_setting = validsettings.getRoot();
root_setting.add("number_of_runs",Setting::TypeInt);
root_setting.add("disabled_runs",Setting::TypeArray);
root_setting.add("disabled_run_range",Setting::TypeArray);
root_setting.add("angora_basepath",Setting::TypeString);
root_setting.add("output_dir",Setting::TypeString);
root_setting.add("input_dir",Setting::TypeString);
root_setting.add("enable_logging",Setting::TypeBoolean);
root_setting.add("log_output_dir",Setting::TypeString);
root_setting.add("log_file_name",Setting::TypeString);
root_setting.add("auto_save_cfg",Setting::TypeBoolean);
root_setting.add("cfg_output_dir",Setting::TypeString);
root_setting.add("courant",Setting::TypeFloat);
root_setting.add("dx",Setting::TypeFloat);
root_setting.add("grid_dimension_x",Setting::TypeFloat);
root_setting.add("grid_dimension_x_in_cells",Setting::TypeInt);
root_setting.add("grid_dimension_y",Setting::TypeFloat);
root_setting.add("grid_dimension_y_in_cells",Setting::TypeInt);
root_setting.add("grid_dimension_z",Setting::TypeFloat);
root_setting.add("grid_dimension_z_in_cells",Setting::TypeInt);
root_setting.add("pml_thickness",Setting::TypeFloat);
root_setting.add("pml_thickness_in_cells",Setting::TypeInt);
root_setting.add("cpml_feature_size",Setting::TypeFloat);
root_setting.add("cpml_feature_size_in_cells",Setting::TypeInt);
root_setting.add("num_of_time_steps",Setting::TypeInt);
root_setting.add("origin_x",Setting::TypeFloat);
root_setting.add("origin_x_in_cells",Setting::TypeInt);
root_setting.add("origin_y",Setting::TypeFloat);
root_setting.add("origin_y_in_cells",Setting::TypeInt);
root_setting.add("origin_z",Setting::TypeFloat);
root_setting.add("origin_z_in_cells",Setting::TypeInt);
root_setting.add("max_field_value",Setting::TypeFloat);
root_setting.add("dB_accuracy",Setting::TypeInt);
Setting& Shapes=root_setting.add("Shapes",Setting::TypeGroup);
Setting& RectangularBoxes=Shapes.add("RectangularBoxes",Setting::TypeList);
Setting& RectangularBoxes_0=RectangularBoxes.add(Setting::TypeGroup);
RectangularBoxes_0.add("shape_tag",Setting::TypeString);
RectangularBoxes_0.add("back_coord_x",Setting::TypeFloat);
RectangularBoxes_0.add("back_coord_x_in_cells",Setting::TypeInt);
RectangularBoxes_0.add("front_coord_x",Setting::TypeFloat);
RectangularBoxes_0.add("front_coord_x_in_cells",Setting::TypeInt);
RectangularBoxes_0.add("left_coord_y",Setting::TypeFloat);
RectangularBoxes_0.add("left_coord_y_in_cells",Setting::TypeInt);
RectangularBoxes_0.add("right_coord_y",Setting::TypeFloat);
RectangularBoxes_0.add("right_coord_y_in_cells",Setting::TypeInt);
RectangularBoxes_0.add("lower_coord_z",Setting::TypeFloat);
RectangularBoxes_0.add("lower_coord_z_in_cells",Setting::TypeInt);
RectangularBoxes_0.add("upper_coord_z",Setting::TypeFloat);
RectangularBoxes_0.add("upper_coord_z_in_cells",Setting::TypeInt);
Setting& Spheres=Shapes.add("Spheres",Setting::TypeList);
Setting& Spheres_0=Spheres.add(Setting::TypeGroup);
Spheres_0.add("shape_tag",Setting::TypeString);
Spheres_0.add("center_coord_x",Setting::TypeFloat);
Spheres_0.add("center_coord_x_in_cells",Setting::TypeInt);
Spheres_0.add("center_coord_y",Setting::TypeFloat);
Spheres_0.add("center_coord_y_in_cells",Setting::TypeInt);
Spheres_0.add("center_coord_z",Setting::TypeFloat);
Spheres_0.add("center_coord_z_in_cells",Setting::TypeInt);
Spheres_0.add("radius",Setting::TypeFloat);
Spheres_0.add("radius_in_cells",Setting::TypeInt);
Setting& Materials=root_setting.add("Materials",Setting::TypeList);
Setting& Materials_0=Materials.add(Setting::TypeGroup);
Materials_0.add("material_tag",Setting::TypeString);
Materials_0.add("rel_permittivity",Setting::TypeFloat);
Materials_0.add("rel_permeability",Setting::TypeFloat);
Materials_0.add("electric_conductivity",Setting::TypeFloat);
Materials_0.add("magnetic_conductivity",Setting::TypeFloat);
Materials_0.add("drude_pole_frequency",Setting::TypeFloat);
Materials_0.add("drude_pole_relaxation_time",Setting::TypeFloat);
Materials_0.add("lorentz_pole_frequency",Setting::TypeFloat);
Materials_0.add("lorentz_pole_damping_factor",Setting::TypeFloat);
Materials_0.add("lorentz_delta_epsilon",Setting::TypeFloat);
Materials_0.add("transparent",Setting::TypeBoolean);
Setting& SimulationSpace=root_setting.add("SimulationSpace",Setting::TypeGroup);
Setting& Objects=SimulationSpace.add("Objects",Setting::TypeList);
Setting& Objects_0=Objects.add(Setting::TypeGroup);
Objects_0.add("material_tag",Setting::TypeString);
Objects_0.add("shape_tag",Setting::TypeString);
Setting& MaterialSlabs=SimulationSpace.add("MaterialSlabs",Setting::TypeList);
Setting& MaterialSlabs_0=MaterialSlabs.add(Setting::TypeGroup);
MaterialSlabs_0.add("material_tag",Setting::TypeString);
MaterialSlabs_0.add("min_coord",Setting::TypeFloat);
MaterialSlabs_0.add("min_coord_in_cells",Setting::TypeFloat);
MaterialSlabs_0.add("max_coord",Setting::TypeFloat);
MaterialSlabs_0.add("max_coord_in_cells",Setting::TypeFloat);
Setting& RandomMaterials=SimulationSpace.add("RandomMaterials",Setting::TypeGroup);
Setting& WhittleMaternCorrelated=RandomMaterials.add("WhittleMaternCorrelated",Setting::TypeList);
Setting& WhittleMaternCorrelated_0=WhittleMaternCorrelated.add(Setting::TypeGroup);
WhittleMaternCorrelated_0.add("constitutive_param_type",Setting::TypeString);
WhittleMaternCorrelated_0.add("mean",Setting::TypeFloat);
WhittleMaternCorrelated_0.add("std_dev",Setting::TypeFloat);
WhittleMaternCorrelated_0.add("corr_len",Setting::TypeFloat);
WhittleMaternCorrelated_0.add("corr_len_in_cells",Setting::TypeInt);
WhittleMaternCorrelated_0.add("m",Setting::TypeFloat);
WhittleMaternCorrelated_0.add("shape_tag",Setting::TypeString);
WhittleMaternCorrelated_0.add("random_seed",Setting::TypeInt);
Setting& MaterialsFromFiles=SimulationSpace.add("MaterialsFromFiles",Setting::TypeList);
Setting& MaterialsFromFiles_0=MaterialsFromFiles.add(Setting::TypeGroup);
MaterialsFromFiles_0.add("file_name",Setting::TypeString);
MaterialsFromFiles_0.add("append_run_index_to_name",Setting::TypeBoolean);
MaterialsFromFiles_0.add("file_extension",Setting::TypeString);
MaterialsFromFiles_0.add("constitutive_param_type",Setting::TypeString);
MaterialsFromFiles_0.add("anchor",Setting::TypeString);
MaterialsFromFiles_0.add("coord_x",Setting::TypeFloat);
MaterialsFromFiles_0.add("coord_x_in_cells",Setting::TypeInt);
MaterialsFromFiles_0.add("coord_y",Setting::TypeFloat);
MaterialsFromFiles_0.add("coord_y_in_cells",Setting::TypeInt);
MaterialsFromFiles_0.add("coord_z",Setting::TypeFloat);
MaterialsFromFiles_0.add("coord_z_in_cells",Setting::TypeInt);
MaterialsFromFiles_0.add("datatype",Setting::TypeString);
MaterialsFromFiles_0.add("max_new_materials",Setting::TypeInt);
Setting& GroundPlanes=SimulationSpace.add("GroundPlanes",Setting::TypeList);
Setting& GroundPlanes_0=GroundPlanes.add(Setting::TypeGroup);
GroundPlanes_0.add("coord",Setting::TypeFloat);
GroundPlanes_0.add("coord_in_cells",Setting::TypeInt);
Setting& SurfaceEngravingProfilesFromFiles=SimulationSpace.add("SurfaceEngravingProfilesFromFiles",Setting::TypeList);
Setting& SurfaceEngravingProfilesFromFiles_0=SurfaceEngravingProfilesFromFiles.add(Setting::TypeGroup);
SurfaceEngravingProfilesFromFiles_0.add("filepath",Setting::TypeString);
SurfaceEngravingProfilesFromFiles_0.add("filename",Setting::TypeString);
SurfaceEngravingProfilesFromFiles_0.add("append_run_index_to_name",Setting::TypeBoolean);
SurfaceEngravingProfilesFromFiles_0.add("fileextension",Setting::TypeString);
SurfaceEngravingProfilesFromFiles_0.add("position_x",Setting::TypeInt);
SurfaceEngravingProfilesFromFiles_0.add("position_y",Setting::TypeInt);
SurfaceEngravingProfilesFromFiles_0.add("position_z",Setting::TypeInt);
SurfaceEngravingProfilesFromFiles_0.add("anchor",Setting::TypeString);
Setting& Waveforms=root_setting.add("Waveforms",Setting::TypeGroup);
Setting& GaussianWaveforms=Waveforms.add("GaussianWaveforms",Setting::TypeList);
Setting& GaussianWaveforms_0=GaussianWaveforms.add(Setting::TypeGroup);
GaussianWaveforms_0.add("waveform_tag",Setting::TypeString);
GaussianWaveforms_0.add("amplitude",Setting::TypeFloat);
GaussianWaveforms_0.add("tau",Setting::TypeFloat);
GaussianWaveforms_0.add("delay",Setting::TypeFloat);
Setting& DifferentiatedGaussianWaveforms=Waveforms.add("DifferentiatedGaussianWaveforms",Setting::TypeList);
Setting& DifferentiatedGaussianWaveforms_0=DifferentiatedGaussianWaveforms.add(Setting::TypeGroup);
DifferentiatedGaussianWaveforms_0.add("waveform_tag",Setting::TypeString);
DifferentiatedGaussianWaveforms_0.add("amplitude",Setting::TypeFloat);
DifferentiatedGaussianWaveforms_0.add("tau",Setting::TypeFloat);
DifferentiatedGaussianWaveforms_0.add("delay",Setting::TypeFloat);
DifferentiatedGaussianWaveforms_0.add("n_diff",Setting::TypeInt);
Setting& ModulatedGaussianWaveforms=Waveforms.add("ModulatedGaussianWaveforms",Setting::TypeList);
Setting& ModulatedGaussianWaveforms_0=ModulatedGaussianWaveforms.add(Setting::TypeGroup);
ModulatedGaussianWaveforms_0.add("waveform_tag",Setting::TypeString);
ModulatedGaussianWaveforms_0.add("modulation_type",Setting::TypeString);
ModulatedGaussianWaveforms_0.add("amplitude",Setting::TypeFloat);
ModulatedGaussianWaveforms_0.add("tau",Setting::TypeFloat);
ModulatedGaussianWaveforms_0.add("f_0",Setting::TypeFloat);
ModulatedGaussianWaveforms_0.add("delay",Setting::TypeFloat);
ModulatedGaussianWaveforms_0.add("phase",Setting::TypeFloat);
ModulatedGaussianWaveforms_0.add("differentiated",Setting::TypeBoolean);
Setting& PointSources=root_setting.add("PointSources",Setting::TypeList);
Setting& PointSources_0=PointSources.add(Setting::TypeGroup);
PointSources_0.add("coord_x",Setting::TypeFloat);
PointSources_0.add("coord_x_in_cells",Setting::TypeInt);
PointSources_0.add("coord_y",Setting::TypeFloat);
PointSources_0.add("coord_y_in_cells",Setting::TypeInt);
PointSources_0.add("coord_z",Setting::TypeFloat);
PointSources_0.add("coord_z_in_cells",Setting::TypeInt);
PointSources_0.add("source_orientation",Setting::TypeString);
PointSources_0.add("waveform_tag",Setting::TypeString);
PointSources_0.add("j_0",Setting::TypeFloat);
root_setting.add("td_nffft_output_dir",Setting::TypeString);
Setting& TimeDomainNFFFT=root_setting.add("TimeDomainNFFFT",Setting::TypeList);
Setting& TimeDomainNFFFT_0=TimeDomainNFFFT.add(Setting::TypeGroup);
TimeDomainNFFFT_0.add("theta",Setting::TypeInt);
TimeDomainNFFFT_0.add("phi",Setting::TypeInt);
TimeDomainNFFFT_0.add("write_hertzian_dipole_far_field",Setting::TypeBoolean);
TimeDomainNFFFT_0.add("nffft_back_margin_x",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_back_margin_x_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("nffft_front_margin_x",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_front_margin_x_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("nffft_left_margin_y",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_left_margin_y_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("nffft_right_margin_y",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_right_margin_y_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("nffft_lower_margin_z",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_lower_margin_z_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("nffft_upper_margin_z",Setting::TypeFloat);
TimeDomainNFFFT_0.add("nffft_upper_margin_z_in_cells",Setting::TypeInt);
TimeDomainNFFFT_0.add("far_field_origin_x",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_origin_x_in_cells",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_origin_y",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_origin_y_in_cells",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_origin_z",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_origin_z_in_cells",Setting::TypeFloat);
TimeDomainNFFFT_0.add("far_field_dir",Setting::TypeString);
TimeDomainNFFFT_0.add("far_field_file_name",Setting::TypeString);
TimeDomainNFFFT_0.add("far_field_file_extension",Setting::TypeString);
TimeDomainNFFFT_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
root_setting.add("pd_nffft_output_dir",Setting::TypeString);
Setting& PhasorDomainNFFFT=root_setting.add("PhasorDomainNFFFT",Setting::TypeList);
Setting& PhasorDomainNFFFT_0=PhasorDomainNFFFT.add(Setting::TypeGroup);
PhasorDomainNFFFT_0.add("num_of_lambdas",Setting::TypeInt);
PhasorDomainNFFFT_0.add("lambda_min",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("lambda_min_in_cells",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("lambda_max",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("lambda_max_in_cells",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("lambda_spacing_type",Setting::TypeString);
PhasorDomainNFFFT_0.add("do_not_include_first_lambda",Setting::TypeBoolean);
PhasorDomainNFFFT_0.add("do_not_include_last_lambda",Setting::TypeBoolean);
PhasorDomainNFFFT_0.add("direction_spec",Setting::TypeString);
PhasorDomainNFFFT_0.add("num_of_dirs_1",Setting::TypeInt);
PhasorDomainNFFFT_0.add("dir1_min",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("dir1_max",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("num_of_dirs_2",Setting::TypeInt);
PhasorDomainNFFFT_0.add("dir2_min",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("dir2_max",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("limit_to_s",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("write_hertzian_dipole_far_field",Setting::TypeBoolean);
PhasorDomainNFFFT_0.add("nffft_back_margin_x",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_back_margin_x_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("nffft_front_margin_x",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_front_margin_x_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("nffft_left_margin_y",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_left_margin_y_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("nffft_right_margin_y",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_right_margin_y_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("nffft_lower_margin_z",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_lower_margin_z_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("nffft_upper_margin_z",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("nffft_upper_margin_z_in_cells",Setting::TypeInt);
PhasorDomainNFFFT_0.add("far_field_origin_x",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_origin_x_in_cells",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_origin_y",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_origin_y_in_cells",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_origin_z",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_origin_z_in_cells",Setting::TypeFloat);
PhasorDomainNFFFT_0.add("far_field_dir",Setting::TypeString);
PhasorDomainNFFFT_0.add("far_field_file_name",Setting::TypeString);
PhasorDomainNFFFT_0.add("far_field_file_extension",Setting::TypeString);
PhasorDomainNFFFT_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
root_setting.add("imaging_output_dir",Setting::TypeString);
Setting& OpticalImages=root_setting.add("OpticalImages",Setting::TypeList);
Setting& OpticalImages_0=OpticalImages.add(Setting::TypeGroup);
OpticalImages_0.add("output_data",Setting::TypeArray);
OpticalImages_0.add("num_of_lambdas",Setting::TypeInt);
OpticalImages_0.add("lambda_min",Setting::TypeFloat);
OpticalImages_0.add("lambda_min_in_cells",Setting::TypeFloat);
OpticalImages_0.add("lambda_max",Setting::TypeFloat);
OpticalImages_0.add("lambda_max_in_cells",Setting::TypeFloat);
OpticalImages_0.add("lambda_spacing_type",Setting::TypeString);
OpticalImages_0.add("do_not_include_first_lambda",Setting::TypeBoolean);
OpticalImages_0.add("do_not_include_last_lambda",Setting::TypeBoolean);
OpticalImages_0.add("ap_half_angle",Setting::TypeFloat);
OpticalImages_0.add("magnification",Setting::TypeFloat);
OpticalImages_0.add("image_space_refr_index",Setting::TypeFloat);
OpticalImages_0.add("image_expansion_factor_x",Setting::TypeFloat);
OpticalImages_0.add("image_expansion_factor_y",Setting::TypeFloat);
OpticalImages_0.add("image_oversampling_rate_x",Setting::TypeFloat);
OpticalImages_0.add("image_oversampling_rate_y",Setting::TypeFloat);
OpticalImages_0.add("coll_half_space",Setting::TypeString);
OpticalImages_0.add("nffft_back_margin_x",Setting::TypeFloat);
OpticalImages_0.add("nffft_back_margin_x_in_cells",Setting::TypeInt);
OpticalImages_0.add("nffft_front_margin_x",Setting::TypeFloat);
OpticalImages_0.add("nffft_front_margin_x_in_cells",Setting::TypeInt);
OpticalImages_0.add("nffft_left_margin_y",Setting::TypeFloat);
OpticalImages_0.add("nffft_left_margin_y_in_cells",Setting::TypeInt);
OpticalImages_0.add("nffft_right_margin_y",Setting::TypeFloat);
OpticalImages_0.add("nffft_right_margin_y_in_cells",Setting::TypeInt);
OpticalImages_0.add("nffft_lower_margin_z",Setting::TypeFloat);
OpticalImages_0.add("nffft_lower_margin_z_in_cells",Setting::TypeInt);
OpticalImages_0.add("nffft_upper_margin_z",Setting::TypeFloat);
OpticalImages_0.add("nffft_upper_margin_z_in_cells",Setting::TypeInt);
OpticalImages_0.add("image_origin_x",Setting::TypeFloat);
OpticalImages_0.add("image_origin_x_in_cells",Setting::TypeFloat);
OpticalImages_0.add("image_origin_y",Setting::TypeFloat);
OpticalImages_0.add("image_origin_y_in_cells",Setting::TypeFloat);
OpticalImages_0.add("image_origin_z",Setting::TypeFloat);
OpticalImages_0.add("image_origin_z_in_cells",Setting::TypeFloat);
OpticalImages_0.add("image_dir",Setting::TypeString);
OpticalImages_0.add("image_file_name",Setting::TypeString);
OpticalImages_0.add("image_file_extension",Setting::TypeString);
OpticalImages_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
Setting& TFSF=root_setting.add("TFSF",Setting::TypeGroup);
Setting& PlaneWaves=TFSF.add("PlaneWaves",Setting::TypeList);
Setting& PlaneWaves_0=PlaneWaves.add(Setting::TypeGroup);
PlaneWaves_0.add("theta",Setting::TypeFloat);
PlaneWaves_0.add("phi",Setting::TypeFloat);
PlaneWaves_0.add("psi",Setting::TypeFloat);
PlaneWaves_0.add("waveform_tag",Setting::TypeString);
PlaneWaves_0.add("pw_extra_amplitude",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_back_margin_x",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_back_margin_x_in_cells",Setting::TypeInt);
PlaneWaves_0.add("tfsf_front_margin_x",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_front_margin_x_in_cells",Setting::TypeInt);
PlaneWaves_0.add("tfsf_left_margin_y",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_left_margin_y_in_cells",Setting::TypeInt);
PlaneWaves_0.add("tfsf_right_margin_y",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_right_margin_y_in_cells",Setting::TypeInt);
PlaneWaves_0.add("tfsf_lower_margin_z",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_lower_margin_z_in_cells",Setting::TypeInt);
PlaneWaves_0.add("tfsf_upper_margin_z",Setting::TypeFloat);
PlaneWaves_0.add("tfsf_upper_margin_z_in_cells",Setting::TypeInt);
PlaneWaves_0.add("pw_origin_x",Setting::TypeFloat);
PlaneWaves_0.add("pw_origin_x_in_cells",Setting::TypeFloat);
PlaneWaves_0.add("pw_origin_y",Setting::TypeFloat);
PlaneWaves_0.add("pw_origin_y_in_cells",Setting::TypeFloat);
PlaneWaves_0.add("pw_origin_z",Setting::TypeFloat);
PlaneWaves_0.add("pw_origin_z_in_cells",Setting::TypeFloat);
PlaneWaves_0.add("display_warnings",Setting::TypeBoolean);
PlaneWaves_0.add("min_cells_per_lambda",Setting::TypeFloat);
Setting& FocusedLaserBeams=TFSF.add("FocusedLaserBeams",Setting::TypeList);
Setting& FocusedLaserBeams_0=FocusedLaserBeams.add(Setting::TypeGroup);
FocusedLaserBeams_0.add("theta",Setting::TypeFloat);
FocusedLaserBeams_0.add("phi",Setting::TypeFloat);
FocusedLaserBeams_0.add("psi",Setting::TypeFloat);
FocusedLaserBeams_0.add("alpha",Setting::TypeInt);
FocusedLaserBeams_0.add("x_order",Setting::TypeInt);
FocusedLaserBeams_0.add("y_order",Setting::TypeInt);
FocusedLaserBeams_0.add("waveform_tag",Setting::TypeString);
FocusedLaserBeams_0.add("flb_extra_amplitude",Setting::TypeFloat);
FocusedLaserBeams_0.add("ap_half_angle",Setting::TypeFloat);
FocusedLaserBeams_0.add("back_focal_length",Setting::TypeFloat);
FocusedLaserBeams_0.add("back_focal_length_in_cells",Setting::TypeFloat);
FocusedLaserBeams_0.add("filling_factor",Setting::TypeInt);
FocusedLaserBeams_0.add("object_space_refr_index",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_back_margin_x",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_back_margin_x_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("tfsf_front_margin_x",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_front_margin_x_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("tfsf_left_margin_y",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_left_margin_y_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("tfsf_right_margin_y",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_right_margin_y_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("tfsf_lower_margin_z",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_lower_margin_z_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("tfsf_upper_margin_z",Setting::TypeFloat);
FocusedLaserBeams_0.add("tfsf_upper_margin_z_in_cells",Setting::TypeInt);
FocusedLaserBeams_0.add("flb_origin_x",Setting::TypeFloat);
FocusedLaserBeams_0.add("flb_origin_x_in_cells",Setting::TypeFloat);
FocusedLaserBeams_0.add("flb_origin_y",Setting::TypeFloat);
FocusedLaserBeams_0.add("flb_origin_y_in_cells",Setting::TypeFloat);
FocusedLaserBeams_0.add("flb_origin_z",Setting::TypeFloat);
FocusedLaserBeams_0.add("flb_origin_z_in_cells",Setting::TypeFloat);
FocusedLaserBeams_0.add("display_warnings",Setting::TypeBoolean);
FocusedLaserBeams_0.add("min_cells_per_lambda",Setting::TypeFloat);
root_setting.add("recorder_output_dir",Setting::TypeString);
Setting& Recorder=root_setting.add("Recorder",Setting::TypeGroup);
Recorder.add("movie_recorder_output_dir",Setting::TypeString);
Setting& MovieRecorders=Recorder.add("MovieRecorders",Setting::TypeList);
Setting& MovieRecorders_0=MovieRecorders.add(Setting::TypeGroup);
MovieRecorders_0.add("recorded_section",Setting::TypeString);
MovieRecorders_0.add("recorded_position",Setting::TypeInt);
MovieRecorders_0.add("recorded_position_in_cells",Setting::TypeInt);
MovieRecorders_0.add("recorded_component",Setting::TypeString);
MovieRecorders_0.add("recording_scale",Setting::TypeString);
MovieRecorders_0.add("recording_type",Setting::TypeString);
MovieRecorders_0.add("movie_dir",Setting::TypeString);
MovieRecorders_0.add("movie_file_name",Setting::TypeString);
MovieRecorders_0.add("movie_file_extension",Setting::TypeString);
MovieRecorders_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
MovieRecorders_0.add("only_records_material_info",Setting::TypeBoolean);
Recorder.add("line_recorder_output_dir",Setting::TypeString);
Setting& LineRecorders=Recorder.add("LineRecorders",Setting::TypeList);
Setting& LineRecorders_0=LineRecorders.add(Setting::TypeGroup);
LineRecorders_0.add("line_orientation",Setting::TypeString);
LineRecorders_0.add("line_position_x1",Setting::TypeInt);
LineRecorders_0.add("line_position_x1_in_cells",Setting::TypeInt);
LineRecorders_0.add("line_position_x2",Setting::TypeInt);
LineRecorders_0.add("line_position_x2_in_cells",Setting::TypeInt);
LineRecorders_0.add("recorded_component",Setting::TypeString);
LineRecorders_0.add("recording_scale",Setting::TypeString);
LineRecorders_0.add("line_dir",Setting::TypeString);
LineRecorders_0.add("line_file_name",Setting::TypeString);
LineRecorders_0.add("line_file_extension",Setting::TypeString);
LineRecorders_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
Recorder.add("field_value_recorder_output_dir",Setting::TypeString);
Setting& FieldValueRecorders=Recorder.add("FieldValueRecorders",Setting::TypeList);
Setting& FieldValueRecorders_0=FieldValueRecorders.add(Setting::TypeGroup);
FieldValueRecorders_0.add("coord_x",Setting::TypeInt);
FieldValueRecorders_0.add("coord_x_in_cells",Setting::TypeInt);
FieldValueRecorders_0.add("coord_y",Setting::TypeInt);
FieldValueRecorders_0.add("coord_y_in_cells",Setting::TypeInt);
FieldValueRecorders_0.add("coord_z",Setting::TypeInt);
FieldValueRecorders_0.add("coord_z_in_cells",Setting::TypeInt);
FieldValueRecorders_0.add("recorded_component",Setting::TypeString);
FieldValueRecorders_0.add("recording_scale",Setting::TypeString);
FieldValueRecorders_0.add("field_value_dir",Setting::TypeString);
FieldValueRecorders_0.add("field_value_file_name",Setting::TypeString);
FieldValueRecorders_0.add("field_value_file_extension",Setting::TypeString);
FieldValueRecorders_0.add("append_group_index_to_file_name",Setting::TypeBoolean);
return validsettings;
